version: 2.1

orbs:
  aws-cli: circleci/aws-cli@3.1.3

commands:
  install_ansible:
    description: Install Ansible
    steps:
      - run:
          name: Install Ansible
          command: |
            sudo apt update
            sudo apt install software-properties-common -y
            sudo add-apt-repository --yes --update ppa:ansible/ansible
            sudo apt install ansible -y
jobs:
  get-server-ip:
    docker:
      # Docker image here that supports AWS CLI
      - image: amazon/aws-cli
    steps:
      # Checkout code from git
      - checkout
      - run:
          name: Install tar
          command: |
            yum install -y tar gzip
      - aws-cli/setup:
          aws-access-key-id: aws_access_key_id
          aws-secret-access-key: aws_secret_access_key
          aws-region: region
      - run:
          name: Add back-end ip to ansible inventory
          command: |
            BACKEND_PUBLIC_IP=$(aws ec2 describe-instances \
              --instance-ids i-0d780f2e34b184b26 \
              --query 'Reservations[*].Instances[*].PublicIpAddress' \
              --output text)
            echo $BACKEND_PUBLIC_IP >> .circleci/ansible/inventory.txt
            cat .circleci/ansible/inventory.txt

      - persist_to_workspace:
          root: ~/
          paths:
            - project/.circleci/ansible/inventory.txt
  configure-server:
    docker:
      - image: cimg/base:stable
    steps:
      # Checkout code from git
      # Add ssh keys with fingerprint
      # attach workspace
      - checkout
      - add_ssh_keys:
          fingerprints: ["1c:2e:97:d3:17:e3:3c:52:9e:99:be:a2:6d:df:60:3b"]
      - attach_workspace:
          at: ~/

      - run:
          name: Clone git
          command: |
            # Your code here
            EC2_USERNAME=ubuntu
            EC2_PUBLIC_DNS=ec2-52-13-34-150.us-west-2.compute.amazonaws.com

            ssh -o StrictHostKeyChecking=no $EC2_USERNAME@$EC2_PUBLIC_DNS \
              git clone https://github.com/AmeDin/capstone.git
              cd capstone

      # Here's where you will add some code to rollback on failure
      - destroy-environment
workflows:
  default:
    jobs:
      - get-server-ip
